#절사평균
mean(weight,trim = 0.2)
mean(weight.heavy, trim = 0.2)
mean(weight)
mean(weight.heavy)
#중앙값
median(weight)
median(weight.heavy)
#절사평균
mean(weight,trim = 0.2)
mean(weight.heavy, trim = 0.2)
#1부터 3사이의 값만 범위로 들어가 있다.
#숫자이기때문에 범주형이 아니다는 절대 아님.
favorite.color <- c(2,3,2,2,1,1,2,3,2,1,2,3,1,2,1,3,3,
1,2,3,2,1,2,1,2,3,1)
ds <- table(favorite.color)
ds
barplot(ds,main='favorite season')
colors <- c('green','red','black')
names(ds) <- colors
ds
barplot(ds,main='favorite season',col=colors)
pie(ds,main = 'favorite season', col= colors)
mean(weight,trim = 0.2)
mean(weight.heavy, trim = 0.2)
#사분위수
quantity(weight.heavy)
#사분위수
quantile(weight.heavy)
quantile(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy)
솟값, 100% 최댓값.
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#종합해서 쓰는 함수
summary(weight.heavy, (0:10)/10)
#분산
var(weight)
#표준편차
sd(weight)
#값의 범위(최소값과 , 최대값)
range(weight)
#최대값과 최소값의 차이
diff(range(weight))
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제도거리',xlab='제동거리 '
,ylab='빈도수',border='blue',col='green',
las=2, break=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제도거리',xlab='제동거리'
,ylab='빈도수',border='blue',col='green',
las=2, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='blue',col='green',
las=2, breaks=5)
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='blㅁ차차',col='green',
las=2, breaks=5)
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=2, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=2, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=3, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=5)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=6)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=7)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=7)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=4)
str(cars)
dist <- cars[,2]
hist(dist,main='Histogram for 제동거리',xlab='제동거리'
,ylab='빈도수',border='black',col='green',
las=0, breaks=5)
boxplot(dist,main='자동차 제동거리')
boxplot(dist,main='자동차 제동거리')
boxplot(dist)
boxplot(dist)$stats #정상범위 사분위수
boxplot(dist)$n     #관측치 개수
boxplot(dist)$conf  #중앙값 신뢰구간
boxplot(dist)$out   #이상치(특이값) 목록
boxplot(dist)
boxplot(dist)$stats #정상범위 사분위수
boxplot(dist)$n     #관측치 개수
boxplot(dist)$conf  #중앙값 신뢰구간
boxplot(dist)$out   #이상치(특이값) 목록
boxplot(dist)
boxplot(dist)$stats #정상범위 사분위수
boxplot(dist)$conf  #중앙값 신뢰구간
boxplot(dist)$out   #이상치(특이값) 목록
#일뱐량중 그룹으로 구성된 자료의 상자그림
boxplot(petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(iris$petal.Length~irisSpecies,
main= '품종별 꽃잎의 길이')
#일뱐량중 그룹으로 구성된 자료의 상자그림
boxplot(petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
#일뱐량중 그룹으로 구성된 자료의 상자그림
boxplot(petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
#일뱐량중 그룹으로 구성된 자료의 상자그림
boxplot(petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
#일뱐량중 그룹으로 구성된 자료의 상자그림
boxplot(petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(iris$petal.Length~irisSpecies,
main= '품종별 꽃잎의 길이')
boxplot(Petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(iris$Petal.Length~irisSpecies,
main= '품종별 꽃잎의 길이')
림
boxplot(Petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(Petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(Petal.Length~Species,
data= iris,
main= '품종별 꽃잎의 길이')
boxplot(iris$Petal.Length~irisSpecies,
main= '품종별 꽃잎의 길이')
boxplot(iris$Petal.Length~iris$Species,
main= '품종별 꽃잎의 길이')
# 한화면에 여러 그래프 작성
par(mfrow= c(1,3))    #1x3 가상화면 불할
barplot(table(mtcars$carb),main= 'c',
xlab = 'carburetors',ylab='freq',
col='blue')
barplot(table(mtcars$cyl),main= 'cyl',
xlab = 'cyl',ylab='freq',
col='black')
barplot(table(mtcars$gear),main= 'g',
xlab = 'gear',ylab='freq',
col='green')
par(mfrow=c(1,1))  # 가상화면 분할 해제
par(mfrow=c(1,1))  # 가상화면 분할 해제
barplot(table(mtcars$gear),main= 'g',
xlab = 'gear',ylab='freq',
col='green')
hk <- c('F' ,'F' ,'F' ,'M' ,'M' ,'F', 'F' ,'F', 'M' ,'M')
hk
class(hk)
table(hk)
# 1. 위의 자료를 gender 벡터에 저장하시오.
gender <- c('F' ,'F' ,'F' ,'M' ,'M' ,'F', 'F' ,'F', 'M' ,'M')
# 2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
ge2 <- table(gender)
ge2
# 2. gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
ge2 <- table(gender)
ge2
barplot(ge2,main = 'gender')
# 4. gender에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(ge2,main='gender')
season
season <- c('여름', '겨울', '봄', '가을', '여름', '가을', '겨울', '여름', '여름', '가을')
season
# 2. season에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
ss <- table(season)
ss
# 3. season에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
barplot(ss,main = 'season')
# 4. season에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(ss,main = 'season')
명은 데이터 이름으로 저장).
lec <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
socre <- data.frame(lec,score)
score
lec <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
socre <- data.frame(lec,score)
score
위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
name = c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
socre <- data.frame(name,score)
score
name = c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
socre <- data.frame(name,score)
score
name = c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
socre2 <- data.frame(name,score)
score2
터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
name = c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
score2 <- data.frame(name,score)
score2
score(,[name,score])
name = c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score <- c(90,85,73,80,85,65,78,50,68,96)
score( ,[name,score])
# 2. score 벡터의 내용을
score[,c(name,score)]
데이터 이름으로 저장).
score <-  c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
names(score) <- c(90,85,73,80,85,65,78,50,68,96)
score
score <- c(90,85,73,80,85,65,78,50,68,96)
names(score) <-  c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score
# 3. 전체 성적의 평균과 중앙값을 각각 구하시오.
mean(score)
median(score)
# 4. 전체 성적의 표준편차를 출력하시오.
sd(score)
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
max(score)
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
which(max(score))
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
which.max((score))
ncol(ss2)
ss2<- which.max((score))
ncol(ss2)
nrow(ss2)
ss2
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
ss2<- which.max((score))
ss2
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
max(score)_
max(score)
subset(score,s2)
s2 <- max(score)
subset(score,s2)
subset(score,s2==score)
s3<- subset(score,s2==score)
rownames(s3)
colnames(s3)
s3<- subset(score,s2==score)
s3colnames(s3)
s3
colnames(s3)
rownames(s3)
#
#  문3)
# R에서 제공하는 mtcars 데이터셋은 자동차 모델에 대한 제원 정보를 담고 있다.
# 1. 이 데이터셋의 자료구조 출력
mtcars
mt <- data.frame(mtcars)
class(mt)
class(mtcars)
# 2. 이 데이터셋의 행의 개수와 열의 개수 출력
dim(mtcars)
# 3. 이 데이터셋 열들의 자료형 출력
str(mt)
# 4. 연비(mpg)가 가장 좋은 자동차 모델 출력
mt1 <- mt$mpg
max(mt1)
mt2 <- subset(mt,mpg==33.9)
rownames(mt2)
# 5. gear가 4인 자동차 모델 중 연비가 가장 낮은 모델 출력
mt1 <- subset(mt, gear==4)
mt2 <- mt1$mpg
min(mt2)
mt2 <- subset(mt1,mpg==17.80)
rownames(mt2)
# 6. Honda Civic의 연비(mpg)와 gear 수 출력
mt1 <- mt['Honda Civic',]
mt1[,c('mpg','gear')]
rownames(mt2)
# 6. 성적에 대한 상자그림을 작성하고, 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(dist,main='성적')
# 6. 성적에 대한 상자그림을 작성하고, 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score,main='성적')
boxplot(score,main='성적')
boxplot(score)$out   #이상치(특이값) 목록
boxplot(score,main='성적')
boxplot(score)$out
# 7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
data.fram(score)
data.frame(score)
data.frma(s3)
data.frame(s3)
rownames(s3)
colname(s3)
s3<- subset(score,s2==score)
data.frame(s3)
colnames(s3)
str(cars)
str(score)
sss<- data.frame(score)
hist(ssss,main = '학생 성적',col='purple')
# 7. 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생 성적',col='purple')
막대의 색: 보라색)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생 성적',col='purple'
las=0, breaks=10)
성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생 성적',xlab='시험 과목'
,ylab='시험 성적',col='purple'
las=0, breaks=10)
hist(socore,main = '학생 성적',xlab='시험 과목'
,ylab='시험 성적',col='purple'
las=0, breaks=10)
hist(socore,main = '학생 성적',xlab='시험 과목'
,ylab='시험 성적',col='purple'
las=0, breaks=10)
hist(socore,main = '학생 성적',xlab='시험 과목'
,ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
색: 보라색)
str(score)
hist(socore,main = '학생 성적',xlab='시험 과목'
ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
라색)
str(score)
hist(socore,main = '학생 성적',xlab='시험 과목',
ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
hist(score,main = '학생 성적',xlab='시험 과목',
ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
생 성적, 막대의 색: 보라색)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생 성적',xlab='시험 과목',
ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생 성적',xlab='시험 과목',
ylab='시험 성적',Border='black',col='purple'
las=0, breaks=10)
프 제목: 학생 성적, 막대의 색: 보라색)
str(score)
ssss<- data.frame(score)
hist(ssss,main = '학생성적',xlab='시험 과목',
ylab='시험성적',Border='black',col='purple'
las=0, breaks=10)
str(score)
hist(score,main = '학생성적',col='purple')
# 5. 가장 성적이 높은 과목의 이름을 출력하시오.
s2 <- max(score)
s3<- subset(score,s2==score)
s3
names(s3)
# 문4)
# R에서 제공하는 mtcars 데이터셋에 대해 다음 문제를 해결하기 위한 R코드를 작성하시오.
#
# 1. 중량(wt)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mt <- dat.frame(mtcars)
mt <- data.frame(mtcars)
mt
mean(mt)
t)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mt <- data.frame(mtcars)
mt
mean(mt)
mtcars
mt
# 1. 중량(wt)의 평균값, 중앙값, 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mt <- mtcars[,"wt"]
mtcars
mt
mean(mt)
median(mt)
mean(mt,trim=0.15)
sd(mt)
# 2. 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary(mt,)
# 3. 실린더수(cyl)에 대해 도수분포표를 출력하시오.
cy <- mtcars[.'cyl']
cy <- mtcars[,'cyl']
cy
table(cy)
# 4. 앞에서 구한 도수분포표를 막대그래프로 출력하시오.
barplot(cy)
# 5. 중량(wt)의 히스토그램을 출력하시오.
hist(cy)
hist(cy)
# 4. 앞에서 구한 도수분포표를 막대그래프로 출력하시오.
barplot(cy)
hist(cy, main='중량')
# 6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(cy)
# 6. 중량(wt)에 대해 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(cy, main= '중량')
boxplot(cy, main= '중량')
boxplot(cy)$stats #정상범위 사분위수
boxplot(cy)$n     #관측치 개수
boxplot(cy)$conf  #중앙값 신뢰구간
boxplot(cy)$out   #이상치(특이값) 목록
# 7. 배기량(disp)에 대한 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
mt21 <- mtcars[,'disp']
mt21
boxpolt(mt21,main='배기량량')
7. 배기량(disp)에 대한 상자그림을 출력하시오.(단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
mt21 <- mtcars[,'disp']
mt21
boxpolt(mt21,main='배기량')
boxplot(mt21)$stats #정상범위 사분위수
boxplot(mt21)$n     #관측치 개수
boxplot(mt21)$conf  #중앙값 신뢰구간
boxplot(mt21)$out   #이상치(특이값) 목록
mt21 <- mtcars[,'disp']
mt21
boxpolt(mt21,main='배기량')
boxplot(mt21)$stats #정상범위 사분위수
boxplot(mt21)$n     #관측치 개수
boxplot(mt21)$conf  #중앙값 신뢰구간
boxplot(mt21)$out   #이상치(특이값) 목록
boxplot(mt21,main='배기량')
boxplot(mt21)$stats #정상범위 사분위수
boxplot(mt21)$n     #관측치 개수
boxplot(mt21)$conf  #중앙값 신뢰구간
boxplot(mt21)$out   #이상치(특이값) 목록
# 8. 기어수(gear)를 그룹 정보로 하여 연비(mpg) 자
ge <- mtacars[,'gear']
ge <- mtcars[,'gear']
ge
boxplot(gear~mpg,
data=mtcars,
main='기어와 연비 비교')
mtcars
mtcars
boxplot(ge)
ge<- boxplot(gear~mpg,
data=mtcars,
main='기어와 연비 비교')
boxplot(ge)
boxplot(ge)
boxplot(ge)$stats
boxplot(ge)$stats
ge(gear~mpg,data=mtcars)
ge <-(gear~mpg,data=mtcars)
ge<- boxplot(mpg~gear,
data=mtcars,
main='기어와 연비 비교')
ge<- boxplot(mpg~gear,
data=mtcars,
main='기어와 연비 비교')
boxplot(mpg~gear,
data=mtcars,
main='기어와 연비 비교')
boxplot(mpg~gear)
boxplot(mpg~gear)$stats
# 5. 중량(wt)의 히스토그램을 출력하시오.
hist(mt, main='중량')
ge2 <- table(gender)
ge2
