circles = st$Population,             #원의 반지름
inches = 0.3,                        #원크기 조절값
fg= 'white',                         #원 테두리 색
bg= 'lightgray',                     #원 바탕색
lwd=1.5,                            #원 테두리선 두께
xlab = 'rate of Illiteracy',
ylab = 'crime(murder) rate',
main = 'Illiteracy and Crime')
text(st$Illiteracy,st$Murder,                 #텍스트출력 x,y 좌표
rownames(st),                            #출력할 text
cex=0.6,                                  #폰트크기
col='brown')                                #폰트컬러
###ggplot을 이용해서 코드 복사 붙여넣기
# Libraries
library(ggplot2)
library(dplyr)
install.packages(plotly)
library(plotly)
install.packages(viridis)
library(viridis)
install.packages(hrbrthemes)
library(hrbrthemes)
# The dataset is provided in the gapminder library
install.packages(gapminder)
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
##수직선. 시계열 데이터
library(dplyr)
library( ggplot2 )
str( economics )
economics$psavert
min( economics$psavert )
x_condition <- economics$psavert == min(economics$psavert )
x_inter <- economics[ x_condition, ]
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
x_inter <- filter(economics,psavert == min(economics$psavert))$date
x_inter
ggplot(economics,aes(x=date,y=psavert))+
geom_line()+
geom_vline(xintercept  = x_inter$psavert )
하시오. 단, 제목과 x축 레이블은 ‘기어의 수’, y축 레이블
# 은 ‘빈도수’로 나타내시오.
#
install.packages('tidyverse')
library(tidyverse)
library(ggplot2)
install.packages("tidyverse")
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot2(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot2(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot2(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot2(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
library(tidyverse)
library(ggplot2)
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
mt <- mtcars$gear
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='puple')
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='purple')
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='red')
str(mt)
class(mt)
mt <- data.frame(mt)
ggplot(data=mt)+geom_bar(stat='identity',width = 0.5,fill='red')
ggplot(data=mt,mapping = aes(x='기어수',y='빈도수수'))+geom_bar(stat='identity',width = 0.5,fill='red')
ggplot(data=mt,mapping = aes(x=,y='빈도수'))+geom_bar(width = 0.5,fill='red')
mtcars
ggplot(data=mtcars,mapping = aes(x=mtcars$gear))+geom_bar(stat='identity',width = 0.5,fill='red')
ggplot(data=mtcars,mapping = aes(x=mtcars$gear,y=))+geom_bar(stat='identity',width = 0.5,fill='red')
ggplot(data=mtcars,mapping = aes(x=mtcars$gear))+geom_bar(stat='identity',width = 0.5,fill='red')
mtcars
ggplot(data=mtcars,mapping = aes(x=mtcars$gear))+geom_bar(stat='identity',width = 0.5,fill='red')
class(mtcars)
ggplot(mtcars,aes(x=gear))+geom+bar(stat='identity',width=0.7,fill='blue')
ggplot(mtcars,aes(x=gear))+geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(mtcars,mapping=aes(x=gear))+geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(x=gear))+geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(y=gear))+geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(y=gear,))+geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(y=gear,))+
geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(x=gear,))+
geom_bar(stat='identity',width=0.7,fill='blue')
class(mtcars)
ggplot(data=mtcars,mapping=aes(x=mtcars$gear,))+
geom_bar(stat='identity',width=0.7,fill='blue')
ggplot(data=mtcars,mapping=aes(x=mtcars$gear))+
geom_bar(stat='identity',width=0.7,fill='blue')
library(tidyverse)
library(ggplot2)
class(mtcars)
ggplot(data=mtcars,mapping=aes(x=mtcars$gear))+
geom_bar(width=0.7,fill='blue')
class(mtcars)
ggplot(data=mtcars,mapping=aes(x=mtcars$gear))+
geom_bar(width=0.7,fill='blue')+
labs(x='기어의 수',y='빈도수')
ggplot(data=mtcars,mapping = aes(x=mtcars4cyl))+
geom_bar(fill='green')+
lbas(x='실린더의 수'_)
ggplot(data=mtcars,mapping = aes(x=mtcars4cyl))+
geom_bar(fill='green')+
lbas(x='실린더의 수')
ggplot(data=mtcars,mapping = aes(x=mtcars4cyl))+
geom_bar(fill='green')+
lbas(x='실린더의 수')
ggplot(data=mtcars,mapping = aes(x=mtcars4cyl))+
geom_bar(fill='green')+
labs(x='실린더의 수')
ggplot(data=mtcars,mapping = aes(x=mtcars$cyl))+
geom_bar(fill='green')+
labs(x='실린더의 수')
# 문3)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 구간 간격이 5.0
# 인 히스토그램을 ggplot으로 작성하시오.
#
ggplot(data = mtcars,mapping = aes(x=mtcars$mpg))+
geom_histogram(binwidth = 5)
# 문4)
# R에서 제공하는 trees 데이터셋의 Girth(나무 둘레)에 대해 ggplot으로
# 히스토그램을 작성하시오. 여기에서는 히스토그램의 제목, x축 레이블, y축
# 레이블을 한글로 표시하시오. (구간 간격은 3.0, 막대의 색은 steelblue로 한다.)
#
library(treemap)
trees
class(trees)
ggplot(data=trees,mapping= aes(x=Girth))+
geom_histogram(binwidth = 3,fill='steelblue')
library(treemap)
trees
class(trees)
ggplot(data=trees,mapping= aes(x=Girth))+
geom_histogram(binwidth = 3,fill='steelblue')
하시오.
#
ggplot(data = mtcars,mapping = aes(x=mtcars$mpg))+
geom_histogram(binwidth = 5)
# 문4)
ggplot(data=trees,mapping= aes(x=Girth))+
geom_histogram(binwidth = 3,fill='steelblue')+
labs(x='Girth',y='레이블블')
ggplot(data=trees,mapping= aes(x=Girth))+
geom_histogram(binwidth = 3,fill='steelblue')+
labs(x='Girth',y='레이블')
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중
#                                             량)를 y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
#                                                                                수에 따라 다르게 표시한다.
ggplot(data=mtcasr,mapping = aes(x=mtcsrs$mpg,y=mtcars$wt))+geom_point(color='red')
르게 표시한다.
ggplot(data=mtcasr,mapping = aes(x=mtcars$mpg,y=mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcasr,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중
#                                             량)를 y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
#           mtcars                                                                     수에 따라 다르게 표시한다.
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
##ggplot Box plot
ggplot(data= iris,mapping=aes(y=Petal.Length))+
geom_boxplot(fill='yellow')
ggplot(data= iris,mapping=aes(y=Petal.Length,
fill=Species))+
geom_boxplot()
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중
#                                             량)를 y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
#                                                                              수에 따라 다르게 표시한다.
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(fill=Species)
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중
#                                             량)를 y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
#                                                                              수에 따라 다르게 표시한다.
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(fill=gear)
# 문5)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중
#                                             량)를 y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
#                                                                              수에 따라 다르게 표시한다.
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(fill=gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(fill=gear,col=gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(color='red')
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear,fill=mtcars$gear)
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear,fill=mtcars$gear)
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear,fill=mtcars$gear)
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear,fill=mtcars$gear)
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(col=mtcars$gear,fill=mtcars$gear)
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt,col=gear))+geom_point()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,col=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,col=cyl,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,col=cyl,fill=cyl))+geom_boxplot()
르게 표시한다.
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt),col=gear))+geom_point()
에 따라 다르게 표시한다.
mtcars
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt),col=gear)+geom_point()
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point(,col=gear)
ggplot(data=mtcars,col=gear,mapping = aes(x= mtcars$mpg,y= mtcars$wt))+geom_point()
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt,col=gear))+geom_point()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(x=mtcars$mpg,y=mtcars$col=cyl,fill=cyl))+geom_boxplot()
#
ggplot(data=mtcars,mapping = aes(x=mtcars$mpg,y=mtcars$col=cyl,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(x=mtcars$mpg,y=mtcars$cyl,col=cyl ,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,col=cyl ,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(group=y=mtcars$mpg,x=mtcars$cyl,col=cyl ,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(group=mtcars$mpg,=mtcars$cyl,col=cyl ,fill=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(group=mtcars$mpg,mtcars$cyl,col=cyl ,fill=cyl))+geom_boxplot()
ggplot(data=mtcars,mapping = aes(x= mtcars$mpg,y= mtcars$wt,col=gear,fill=gear))+geom_point()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,group= col=cyl ))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,group=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,group=cyl,col=cyl))+geom_boxplot()
#
# 문6)
# R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상
# 자그림을 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
#
ggplot(data=mtcars,mapping = aes(y=mtcars$mpg,x=mtcars$cyl,group=cyl,col=cyl,fill=cyl))+geom_boxplot()
pp <- c(51014,51245,51446,51635,51911,51973)
yea <- c(2015,2016,2017,2018,2019,2020)
pp <- c(51014,51245,51446,51635,51911,51973)
yee <- c(2021,2022,2023,2024,2025,2026)
ppp <- c(52123,52261,52388,52504,52609,52704)
total <- data.frame(yea,pp,yee,ppp)
total
colnames()
colnames(total) <- c('연도','총인구(천명)','연도','총인구(천명)')
total
ggplot(data=total,mapping=aes(x=total$연도,y=total$`총인구(천명)`))+geom_line(col='red')
total <- data.frame(yea,pp)
total
colnames(total) <- c('연도','총인구(천명)','연도','총인구(천명)')
total
ggplot(data=total,mapping=aes(x=total$연도,y=total$`총인구(천명)`))+geom_line(col='red')
total <- data.frame(yea,pp)
total
colnames(total) <- c('연도','총인구(천명)','연도','총인구(천명)')
total
yea <- c(2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026)
pp <- c(51014,51245,51446,51635,51911,51973,52123,52261,52388,52504,52609,52704)
total <- data.frame(yea,pp)
total
colnames(total) <- c('연도','총인구(천명)','연도','총인구(천명)')
total
ggplot(data=total,mapping=aes(x=total$연도,y=total$`총인구(천명)`))+geom_line(col='red')
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구(천명)))+geom_line(col='red')
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구(천명)))+geom_line(col='red')
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구(천명)))+geom_line(col='red')
colnames(total) <- c('연도','총인구')
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구))+geom_line(col='red')
ggplot(data=total,mapping=aes(x=total$연도도,y=total$총인구))+geom_line(col='red')
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구))+geom_line(col='red')
labs(x='연도',y='총인구(천명)'
total <- data.frame(yea,pp)
total
colnames(total) <- c('연도','총인구')
total
ggplot(data=total,mapping=aes(x=total$연도,y=total$총인구))+geom_line(col='red')+
labs(x='연도',y='총인구(천명)')
labs(x='연도',y='총인구(천명)')
# 문8)
# 다음과 같이 데이터셋 us를 생성한 후 물음에 답하시오. 여기서 state.x77
# 은 미국 50개 주의 통계정보가, state.division은 미국 50개 주의 지역 구분
# (예: 북부, 중부, 남부……) 정보가 저장된 데이터셋이다.
#
# us <- data.frame(state.x77, state.division)
class(state.x77)
st <- data.frame(state.x77)
us <- data.frame(state.x77)
library(treemap)
GNI2014
us
state.di
state.division#
us <- data.frame(state.x77, state.division)
s
us
treemap(us,
index = c('state.division'),
vSize = 'Population',
vColor = 'Income',
tye='value',
title='U.S.A')
library(treemap)
treemap(us,
index = c('state.division'),
vSize = 'Population',
vColor = 'Income',
tye='value',
title='U.S.A')
treemap(GNI2014,
index = c('continent','iso3'),#계층구조
vSize = 'population',           #타일크기
vColor='GNI',                    #타일컬러
type= 'value',                     #타일컬러링방법
bg.labels = 'yellow',                #레이블배경색
title="World's GNI")
#
# (1) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
# 또한, 타일의 면적은 Population(인구수), 타일의 색은 Income(소득)으로 나타내고,
# 각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있
# 는 것이 무엇인지 설명하시오
#
state.division
treemap(us,
index = c('state.division'),
vSize = 'Population',
vColor = 'Income',
type='value',
title='U.S.A')
us <- data.frame(us,usname=rownames(st))
us <- data.frame(us,usname=rownames(us))
us
treemap(us,
index = c('state.division','usname'),
vSize = 'Population',
vColor = 'Income',
type='value',
title='U.S.A')
treemap(us,
index = c('state.division','usname'),
vSize = 'HS.Grad',
vColor = 'Murder',
type='value',
title='U.S.A')
# (3) us 데이터셋에 대해 x축은 Income(소득), y축은 Illiteracy(문맹률), 원의 크기는
# Population(인구수), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버
# 블차트를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하
# 시오.
#
symbols(us$Income,us$Illiteracy,circles = st$Population,bg='green')
text(us$Income,us$Illiteracy,rownames(us))
text(us$Illiteracy,us$Murder,rownames(us))
symbols(us$Illiteracy,us$Murder,circles = st$Area,bg='green')
text(us$Illiteracy,us$Murder,rownames(us))
# (4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기
# 는 Area(면적), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트
# 를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy,us$Murder,circles = st$Area,bg='green', inches = 0.5)
text(us$Illiteracy,us$Murder,rownames(us))
# (4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기
# 는 Area(면적), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트
# 를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy,us$Murder,circles = st$Area,bg='green')
text(us$Illiteracy,us$Murder,rownames(us))
symbols(us$Income,us$Illiteracy,circles = st$Population,bg='green')
text(us$Income,us$Illiteracy,rownames(us))
리맵에서 관찰할
# 수 있는 것이 무엇인지 설명하시오.
#
treemap(us,
index = c('state.division','usname'),
vSize = 'HS.Grad',
vColor = 'Murder',
type='value',
title='U.S.A')
#
